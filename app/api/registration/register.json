{
  "meta": {
    "options": {
      "linkedFile": "/views/Registration.ejs",
      "linkedForm": "register1"
    },
    "$_POST": [
      {
        "type": "text",
        "fieldName": "product_id",
        "name": "product_id"
      },
      {
        "type": "text",
        "fieldName": "product_name",
        "name": "product_name"
      },
      {
        "type": "text",
        "fieldName": "first_name",
        "options": {
          "rules": {
            "core:required": {
              "param": ""
            }
          }
        },
        "name": "first_name"
      },
      {
        "type": "text",
        "fieldName": "last_name",
        "options": {
          "rules": {
            "core:required": {
              "param": ""
            }
          }
        },
        "name": "last_name"
      },
      {
        "type": "text",
        "fieldName": "email",
        "options": {
          "rules": {
            "core:required": {
              "param": ""
            },
            "core:email": {
              "param": ""
            }
          }
        },
        "name": "email"
      },
      {
        "type": "text",
        "fieldName": "password",
        "options": {
          "rules": {
            "core:required": {
              "param": ""
            },
            "core:minlength": {
              "param": "8"
            },
            "core:nowhitespace": {
              "param": ""
            }
          }
        },
        "name": "password"
      },
      {
        "type": "text",
        "name": "user_id"
      },
      {
        "type": "text",
        "fieldName": "checkinput",
        "options": {
          "rules": {
            "core:required": {
              "param": ""
            }
          }
        },
        "name": "checkinput"
      }
    ],
    "$_SESSION": [
      {
        "type": "text",
        "name": "reg_code"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "validate",
        "module": "validator",
        "action": "validate",
        "options": {
          "data": [
            {
              "name": "validate_1",
              "value": "{{$_POST.email}}",
              "rules": {
                "db:notexists": {
                  "param": {
                    "connection": "db",
                    "table": "user",
                    "column": "email"
                  },
                  "message": "Email already exists in database."
                }
              },
              "fieldName": "email"
            }
          ]
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.product_id.length()>0}}",
          "then": {
            "steps": {
              "name": "BotStop_product_id",
              "module": "core",
              "action": "response",
              "options": {
                "status": 401,
                "data": "Unauthorized!"
              }
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.product_name!=$_SESSION.reg_code}}",
          "then": {
            "steps": {
              "name": "product_name_bot",
              "module": "core",
              "action": "response",
              "options": {
                "status": 401,
                "data": "Unauthorized!"
              }
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "hash",
        "module": "crypto",
        "action": "passwordHash",
        "options": {
          "password": "{{$_POST.password}}",
          "algo": "argon2id"
        },
        "outputType": "text"
      },
      {
        "name": "user_insert",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "user",
                "column": "first_name",
                "type": "text",
                "value": "{{$_POST.first_name}}"
              },
              {
                "table": "user",
                "column": "last_name",
                "type": "text",
                "value": "{{$_POST.last_name}}"
              },
              {
                "table": "user",
                "column": "email",
                "type": "text",
                "value": "{{$_POST.email}}"
              },
              {
                "table": "user",
                "column": "password",
                "type": "text",
                "value": "{{hash}}"
              }
            ],
            "table": "user",
            "returning": "user_id",
            "query": "insert into `user` (`email`, `first_name`, `last_name`, `password`) values (?, ?, ?, ?) returning `user_id`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{$_POST.first_name}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.last_name}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.email}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{hash}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ]
      },
      {
        "name": "query",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "db",
          "sql": {
            "type": "select",
            "columns": [
              {
                "table": "user",
                "column": "user_id"
              }
            ],
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_POST.email}}",
                "test": ""
              }
            ],
            "table": {
              "name": "user"
            },
            "primary": "user_id",
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "user.email",
                  "field": "user.email",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_POST.email}}",
                  "data": {
                    "table": "user",
                    "column": "email",
                    "type": "text",
                    "columnObj": {
                      "type": "string",
                      "maxLength": 255,
                      "primary": false,
                      "unique": false,
                      "nullable": true,
                      "name": "email"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "select `user_id` from `user` where `user`.`email` = ?"
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "user_id"
          }
        ],
        "outputType": "object"
      },
      {
        "name": "role_insert",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "roles",
                "column": "user_id",
                "type": "text",
                "value": "{{query.user_id}}"
              },
              {
                "table": "roles",
                "column": "role",
                "type": "text",
                "value": "L"
              }
            ],
            "table": "roles",
            "returning": "role_id",
            "query": "insert into `roles` (`role`, `user_id`) values (?, ?) returning `role_id`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{query.user_id}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ]
      },
      {
        "name": "identity",
        "module": "auth",
        "action": "login",
        "options": {
          "provider": "testing2",
          "username": "{{$_POST.email}}"
        },
        "output": true,
        "meta": []
      },
      {
        "name": "salt_value",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "0,1,2,3,4,5,6,7,8,9,a,b,h,t,@,!,0,1,2,3,4,5,6,7,8,9,a,b,h,t,@,!,0,1,2,3,4,5,6,7,8,9,a,b,h,t,@,!,0,1,2,3,4,5,6,7,8,9,a,b,h,t,@,!"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "salt_array",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{salt_value.split(',')}}"
        },
        "meta": [],
        "outputType": "array"
      },
      {
        "name": "salt_array_random",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "g_salt_array_random",
          "value": "{{salt_array.randomize()}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "code_confirm",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "g_code_confirm",
          "value": "\n"
        },
        "meta": [],
        "outputType": "text",
        "output": true
      },
      {
        "name": "repeat",
        "module": "core",
        "action": "repeat",
        "options": {
          "repeat": 6,
          "outputFields": [],
          "exec": {
            "steps": {
              "name": "code_confirm",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": "{{g_code_confirm}}{{g_salt_array_random[$index]}}",
                "key": "g_code_confirm"
              },
              "meta": [],
              "outputType": "text"
            }
          }
        },
        "output": true,
        "meta": [
          {
            "name": "$index",
            "type": "number"
          },
          {
            "name": "$number",
            "type": "number"
          },
          {
            "name": "$name",
            "type": "text"
          },
          {
            "name": "$value",
            "type": "object"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{g_code_confirm<6}}",
          "then": {
            "steps": {
              "name": "code too long...",
              "module": "core",
              "action": "response",
              "options": {
                "status": 401,
                "data": "code too long..."
              }
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "update",
        "module": "dbupdater",
        "action": "update",
        "options": {
          "connection": "db",
          "sql": {
            "type": "update",
            "values": [
              {
                "table": "user",
                "column": "confirmation_code",
                "type": "text",
                "value": "{{g_code_confirm}}",
                "recid": 1
              }
            ],
            "table": "user",
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "user_id",
                  "field": "user_id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{user_insert.identity}}",
                  "data": {
                    "column": "user_id"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "returning": "user_id",
            "query": "update `user` set `confirmation_code` = ? where `user_id` = ? returning `user_id`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{g_code_confirm}}",
                "test": ""
              },
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P2",
                "value": "{{user_insert.identity}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "affected",
            "type": "number"
          }
        ]
      },
      {
        "name": "",
        "options": {
          "comment": "mail being sent\n"
        }
      },
      {
        "name": "",
        "module": "mail",
        "action": "send",
        "options": {
          "instance": "smtp",
          "subject": "Your authorization code",
          "fromName": "Livegiggy.com",
          "fromEmail": "michel@mhageman.nl",
          "toName": "{{$_POST.first_name+' '+$_POST.last_name}}",
          "toEmail": "{{$_POST.email}}",
          "body": "Your authorization code is: {{g_code_confirm}}"
        },
        "output": false
      }
    ]
  },
  "usedModules": {
    "argon2": "^0.30.2"
  }
}